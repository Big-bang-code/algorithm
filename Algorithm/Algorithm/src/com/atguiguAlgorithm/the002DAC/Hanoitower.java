package com.atguiguAlgorithm.the002DAC;
/**
 * 汉诺塔移动方案
 * @Title Hanoitwer.java
 * @Description
 * @author 孟建邦
 * @date2020年3月22日
 */
public class Hanoitower {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		hanoiTower(2,'A','B','C');
	}

	
	//汉诺塔移动方案
	//使用分治算法
	/**
	 * 
	 * @param num	一共有多少个盘子
	 * @param a		柱子
	 * @param b
	 * @param c
	 * Title:hanoiTower
	 */
	public static void hanoiTower(int num,char a,char b,char c) {
		
		if(num == 1) {
			System.out.println("第1个盘从 "+a+"-->"+c);
		} else {
			//如果我们有 n >= 2 情况，我们总是可以看做是两个盘 1.最下边的一个盘 2. 上面的所有盘
			
			//1.先把 最上面的盘 A->B ，移动过程会使用到c
			hanoiTower(num-1, a, c, b);
						
			//2.把最下边的盘 A->C
			System.out.println("第"+num+"个盘从 "+a+"-->"+c);
			
			//3.把B塔的所有盘 从 B->C  ,移动过程使用到a塔 
			hanoiTower(num-1, b, a, c);
			
		}
		
		
	}
	
	
	
}
